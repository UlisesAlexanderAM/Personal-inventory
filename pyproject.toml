[tool.poetry]
name = "personal-inventory"
version = "0.1.0"
description = "Web app to use a personal inventory to manage the skills needed for a job position or to keep track of the desired skills"
authors = [
    "Ulises Alexander Arguelles Monjaraz <ulises_alexander_am@proton.me>",
]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.100.1"
SQLAlchemy = "^2.0.19"
pydantic-settings = "^2.0.2"
pydantic = "^2.1.1"
uvicorn = { extras = ["standard"], version = "^0.23.2" }
loguru = "^0.7.2"

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
ruff = "^0.0.282"
mypy = "^1.4.1"
pytest = "^7.4.0"
httpx = "^0.24.1"
bandit = {extras = ["toml"], version = "^1.7.5"}
pytest-cov = "^4.1.0"
allure-pytest = "^2.13.2"
commitizen = "^3.10.0"
pre-commit = "^3.4.0"

[tool.mypy]
plugins = ["pydantic.mypy"]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true

[tool.ruff]
select = ["E", "F", "W", "N", "D", "B", "Q", "C90", "ICN", "TID", "PL", "RUF"]
ignore = ["E501", "D407"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
